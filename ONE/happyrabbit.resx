<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhWQBaAIcAAAAAAAAAMwAAZgAAmQAAzAAA/zMAADMAMzMAZjMAmTMAzDMA/2YAAGYAM2YAZmYA
        mWYAzGYA/5kAAJkAM5kAZpkAmZkAzJkA/8wAAMwAM8wAZswAmcwAzMwA//8AAP8AM/8AZv8Amf8AzP8A
        /wAzAAAzMwAzZgAzmQAzzAAz/zMzADMzMzMzZjMzmTMzzDMz/2YzAGYzM2YzZmYzmWYzzGYz/5kzAJkz
        M5kzZpkzmZkzzJkz/8wzAMwzM8wzZswzmcwzzMwz//8zAP8zM/8zZv8zmf8zzP8z/wBmAABmMwBmZgBm
        mQBmzABm/zNmADNmMzNmZjNmmTNmzDNm/2ZmAGZmM2ZmZmZmmWZmzGZm/5lmAJlmM5lmZplmmZlmzJlm
        /8xmAMxmM8xmZsxmmcxmzMxm//9mAP9mM/9mZv9mmf9mzP9m/wCZAACZMwCZZgCZmQCZzACZ/zOZADOZ
        MzOZZjOZmTOZzDOZ/2aZAGaZM2aZZmaZmWaZzGaZ/5mZAJmZM5mZZpmZmZmZzJmZ/8yZAMyZM8yZZsyZ
        mcyZzMyZ//+ZAP+ZM/+ZZv+Zmf+ZzP+Z/wDMAADMMwDMZgDMmQDMzADM/zPMADPMMzPMZjPMmTPMzDPM
        /2bMAGbMM2bMZmbMmWbMzGbM/5nMAJnMM5nMZpnMmZnMzJnM/8zMAMzMM8zMZszMmczMzMzM///MAP/M
        M//MZv/Mmf/MzP/M/wD/AAD/MwD/ZgD/mQD/zAD//zP/ADP/MzP/ZjP/mTP/zDP//2b/AGb/M2b/Zmb/
        mWb/zGb//5n/AJn/M5n/Zpn/mZn/zJn//8z/AMz/M8z/Zsz/mcz/zMz/////AP//M///Zv//mf//zP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBSwD/ACwAAAAAWQBaAAAI/wCvCRxIsKDBgwgTKlzIsKHDhxAj
        SpxIsaLFixgzatzIsaPHjwVZBRp5hctIkCgfsroSyIoVQaxEXklJU2EgQYG6IIoZMxCrmkAL+mS1E9FQ
        nEEl8uSpcmjMK1aG+kz6sEsXlyOnNsTJU5DLqKyQUmUY6Aoiozu1MhQEsyeXQ4dMIuryc6zNtksDObzJ
        c+QhWXGz2rW5c6nIugoP84Qa6JCjQ1HpDkbodKlRhit5IrIi8q2jloG4TDZ4eKThk4mdimXlmYtJtaNL
        WykcExEXxNdECuyJV63Ixq/1jt7tc/MVw1wHomYZqPBmg6FBox5tejNWvmG1XhF0zSWrqGmFF//0ysUl
        VNxjq5uMWnak0aGc27cED5tgZxkyrEDxaZrq9s6oESVdS8zNxwJ74iHUE0neoZeSYq7dBl1UFDL41QoJ
        NpQWVaZFl+FAIkUlyE44jYTVUg05WJNUoalo4gqc/VZiF8dB5RJ3wx1003uHfPgdgjcxJghjLV1VX47E
        RdejgyLhxAVMOJ1FVBdZESkYkgK59FZcKhLUYXPyvTTfmFFh+Z1JJs2C2U1gtQQTaEaBhaVyYHV5TVZ4
        tpTWbHHyFxVLdlL145p/RmZWnF+BhciIJX5o12+B9tVFlPolOlKJRMXJUpk5DqVgSWUxtidUUMD4FV+a
        ljhnQmOaqFOIpa7/IKusNA5l1HGrLjQLnHqeFUiss2IoZVhx5nrnkUmOKGVLwcqalUzMBTrWb47uptNZ
        2AbS7EtU3tqetEn9dtluZYYoIluCvGaFrPRtV1ZMnJl5xVXvcYeTjZGZF6RPONU536ngAuXekK26dxVU
        Q34l6qLnWhFDDCxccR6SImmKFaIjbhrVwzFUsYUVXEDFsQwdV2EFFliwRHFzWJ3aUgwvSYxVDFvUvEUV
        MawQQ3kPuxQxFnxAlSO8GidqhcfszUvlw/lZIcOsp/bLB9BB4yjoax7X7HEYNXOttRXMneWVxFhYwcKB
        Y/Yr8doS2xXIFoZsEcbcNt8MMsghl0WbcTLL/8DCflLOdfaBZh8YMEct3eyalnnayN/egZxttt9o+woF
        CzCW9Xe808Y00K7uiUSXmsda1gXlTw/us+RscmomSb8RhMh/mt3rtKyDn00kC9V22pxkA1l5lb5ZJSr5
        XDL0PtxK7xFXeO764U58nmArP5x7r7FkMUlR6M62wiaqbKxARoXYHFFXwMhdqH5fgTLKa6cexcTjl05U
        o57feQUL7fPhP8r+29/PcFU/1oQHNmPjnwyu4L+pNRAL/GMg/cZ3Kc6BiHL8OxkAqTa1y7lvf8krYHsM
        Aran4UeDHGygACXmN+sZixULlJzT3vc/FXrPbxasX0H2N7kr4IeBDQyiD/8jhsMQ6pCEmFsgVCIWxCBi
        AT8riNjajojEDLokPym0IX4iKDQqXhBzTnPa2bIYtCSKcYFW8KJyKAexp+GObEvk3wrwQ7I5plGNd9oi
        5gY3RykeiIU6k1Ub76hGAp3wbFHcH1SUuL9ASo+QXiQQ29gWMSmykH+Skxke7wS2SV7Skmsb3Pc2KUlP
        mq2TnpwkJKkYCEam8pWqdOHQQgTLWqrycBERHbLIwh6F9c2WsFzlRrr1L1mS65VGA6aNZDYTj6ykMl45
        3HdM2a1rzCJhkjvhCV1ilbXlMCP/Ok3AvuNKlyBCR1awyr9WcJy+lLALHKGWeSR2Exf+yJvftE9xajP/
        JYlBIT9SlAEu10SidUWRPQuZz/ci1RzaaKYsZpujzAaa0HTqp2nssVPkuDjBTz2UnvMpVfsYoxGvuMRU
        X2mejqBiR5IuJDM9QdDtDso2I16kQ2JEG/pUJJIo2tGYsxGQeL4Dte8ZM6GbcmOdVCqUdenrIec7jD6v
        SEenHXUhycnJq/qCm++8CGy49JedqEVRhzzzNJx7pu1mA5Gglm952svLPMHEGdelyCw9KatHQlebRRXm
        XRMxzYKwJFjD5HUi38nLVVEyC9qdZrHKqcx0hoZXxVakOhBl50iopFeNAIo2u2yIaRqFFahYBS99xRa2
        OnsQntzInTdpVJ5mGyqZV1UmRCNizw/PhsHcSdFqEZkdCH17qJX49rjIRW63stNLzSWXuASUiACTa57e
        Pve4PmRkfqh0KvOgEqToQldMSDeRVoQlvOhly2qJYtj2ure9rZgFeTMSEAA7
</value>
  </data>
</root>