<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhXABaAIcAAAAAAAAAMwAAZgAAmQAAzAAA/zMAADMAMzMAZjMAmTMAzDMA/2YAAGYAM2YAZmYA
        mWYAzGYA/5kAAJkAM5kAZpkAmZkAzJkA/8wAAMwAM8wAZswAmcwAzMwA//8AAP8AM/8AZv8Amf8AzP8A
        /wAzAAAzMwAzZgAzmQAzzAAz/zMzADMzMzMzZjMzmTMzzDMz/2YzAGYzM2YzZmYzmWYzzGYz/5kzAJkz
        M5kzZpkzmZkzzJkz/8wzAMwzM8wzZswzmcwzzMwz//8zAP8zM/8zZv8zmf8zzP8z/wBmAABmMwBmZgBm
        mQBmzABm/zNmADNmMzNmZjNmmTNmzDNm/2ZmAGZmM2ZmZmZmmWZmzGZm/5lmAJlmM5lmZplmmZlmzJlm
        /8xmAMxmM8xmZsxmmcxmzMxm//9mAP9mM/9mZv9mmf9mzP9m/wCZAACZMwCZZgCZmQCZzACZ/zOZADOZ
        MzOZZjOZmTOZzDOZ/2aZAGaZM2aZZmaZmWaZzGaZ/5mZAJmZM5mZZpmZmZmZzJmZ/8yZAMyZM8yZZsyZ
        mcyZzMyZ//+ZAP+ZM/+ZZv+Zmf+ZzP+Z/wDMAADMMwDMZgDMmQDMzADM/zPMADPMMzPMZjPMmTPMzDPM
        /2bMAGbMM2bMZmbMmWbMzGbM/5nMAJnMM5nMZpnMmZnMzJnM/8zMAMzMM8zMZszMmczMzMzM///MAP/M
        M//MZv/Mmf/MzP/M/wD/AAD/MwD/ZgD/mQD/zAD//zP/ADP/MzP/ZjP/mTP/zDP//2b/AGb/M2b/Zmb/
        mWb/zGb//5n/AJn/M5n/Zpn/mZn/zJn//8z/AMz/M8z/Zsz/mcz/zMz/////AP//M///Zv//mf//zP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBlgD/ACwAAAAAXABaAAAI/wCvCRxIsKDBgwgTKlzIsKHDhxAj
        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
        gAAAOw==
</value>
  </data>
</root>